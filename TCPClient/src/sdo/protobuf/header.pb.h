// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: header.proto

#ifndef PROTOBUF_header_2eproto__INCLUDED
#define PROTOBUF_header_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace sdo {
namespace protobuf {
class header;
class headerDefaultTypeInternal;
extern headerDefaultTypeInternal _header_default_instance_;
}  // namespace protobuf
}  // namespace sdo

namespace sdo {
namespace protobuf {

namespace protobuf_header_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_header_2eproto

enum header_PACKAGE_TYPE {
  header_PACKAGE_TYPE_REQUEST = 0,
  header_PACKAGE_TYPE_RESPONSE = 1,
  header_PACKAGE_TYPE_header_PACKAGE_TYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  header_PACKAGE_TYPE_header_PACKAGE_TYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool header_PACKAGE_TYPE_IsValid(int value);
const header_PACKAGE_TYPE header_PACKAGE_TYPE_PACKAGE_TYPE_MIN = header_PACKAGE_TYPE_REQUEST;
const header_PACKAGE_TYPE header_PACKAGE_TYPE_PACKAGE_TYPE_MAX = header_PACKAGE_TYPE_RESPONSE;
const int header_PACKAGE_TYPE_PACKAGE_TYPE_ARRAYSIZE = header_PACKAGE_TYPE_PACKAGE_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* header_PACKAGE_TYPE_descriptor();
inline const ::std::string& header_PACKAGE_TYPE_Name(header_PACKAGE_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    header_PACKAGE_TYPE_descriptor(), value);
}
inline bool header_PACKAGE_TYPE_Parse(
    const ::std::string& name, header_PACKAGE_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<header_PACKAGE_TYPE>(
    header_PACKAGE_TYPE_descriptor(), name, value);
}
// ===================================================================

class header : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sdo.protobuf.header) */ {
 public:
  header();
  virtual ~header();

  header(const header& from);

  inline header& operator=(const header& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const header& default_instance();

  static inline const header* internal_default_instance() {
    return reinterpret_cast<const header*>(
               &_header_default_instance_);
  }

  void Swap(header* other);

  // implements Message ----------------------------------------------

  inline header* New() const PROTOBUF_FINAL { return New(NULL); }

  header* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const header& from);
  void MergeFrom(const header& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(header* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef header_PACKAGE_TYPE PACKAGE_TYPE;
  static const PACKAGE_TYPE REQUEST =
    header_PACKAGE_TYPE_REQUEST;
  static const PACKAGE_TYPE RESPONSE =
    header_PACKAGE_TYPE_RESPONSE;
  static inline bool PACKAGE_TYPE_IsValid(int value) {
    return header_PACKAGE_TYPE_IsValid(value);
  }
  static const PACKAGE_TYPE PACKAGE_TYPE_MIN =
    header_PACKAGE_TYPE_PACKAGE_TYPE_MIN;
  static const PACKAGE_TYPE PACKAGE_TYPE_MAX =
    header_PACKAGE_TYPE_PACKAGE_TYPE_MAX;
  static const int PACKAGE_TYPE_ARRAYSIZE =
    header_PACKAGE_TYPE_PACKAGE_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PACKAGE_TYPE_descriptor() {
    return header_PACKAGE_TYPE_descriptor();
  }
  static inline const ::std::string& PACKAGE_TYPE_Name(PACKAGE_TYPE value) {
    return header_PACKAGE_TYPE_Name(value);
  }
  static inline bool PACKAGE_TYPE_Parse(const ::std::string& name,
      PACKAGE_TYPE* value) {
    return header_PACKAGE_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string method = 1;
  void clear_method();
  static const int kMethodFieldNumber = 1;
  const ::std::string& method() const;
  void set_method(const ::std::string& value);
  #if LANG_CXX11
  void set_method(::std::string&& value);
  #endif
  void set_method(const char* value);
  void set_method(const char* value, size_t size);
  ::std::string* mutable_method();
  ::std::string* release_method();
  void set_allocated_method(::std::string* method);

  // string body = 4;
  void clear_body();
  static const int kBodyFieldNumber = 4;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  #if LANG_CXX11
  void set_body(::std::string&& value);
  #endif
  void set_body(const char* value);
  void set_body(const char* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // .sdo.protobuf.header.PACKAGE_TYPE package_type = 2;
  void clear_package_type();
  static const int kPackageTypeFieldNumber = 2;
  ::sdo::protobuf::header_PACKAGE_TYPE package_type() const;
  void set_package_type(::sdo::protobuf::header_PACKAGE_TYPE value);

  // int32 sequence = 3;
  void clear_sequence();
  static const int kSequenceFieldNumber = 3;
  ::google::protobuf::int32 sequence() const;
  void set_sequence(::google::protobuf::int32 value);

  // int32 code = 5;
  void clear_code();
  static const int kCodeFieldNumber = 5;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sdo.protobuf.header)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr method_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  int package_type_;
  ::google::protobuf::int32 sequence_;
  ::google::protobuf::int32 code_;
  mutable int _cached_size_;
  friend struct  protobuf_header_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// header

// string method = 1;
inline void header::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& header::method() const {
  // @@protoc_insertion_point(field_get:sdo.protobuf.header.method)
  return method_.GetNoArena();
}
inline void header::set_method(const ::std::string& value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sdo.protobuf.header.method)
}
#if LANG_CXX11
inline void header::set_method(::std::string&& value) {
  
  method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sdo.protobuf.header.method)
}
#endif
inline void header::set_method(const char* value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sdo.protobuf.header.method)
}
inline void header::set_method(const char* value, size_t size) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sdo.protobuf.header.method)
}
inline ::std::string* header::mutable_method() {
  
  // @@protoc_insertion_point(field_mutable:sdo.protobuf.header.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* header::release_method() {
  // @@protoc_insertion_point(field_release:sdo.protobuf.header.method)
  
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void header::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    
  } else {
    
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:sdo.protobuf.header.method)
}

// .sdo.protobuf.header.PACKAGE_TYPE package_type = 2;
inline void header::clear_package_type() {
  package_type_ = 0;
}
inline ::sdo::protobuf::header_PACKAGE_TYPE header::package_type() const {
  // @@protoc_insertion_point(field_get:sdo.protobuf.header.package_type)
  return static_cast< ::sdo::protobuf::header_PACKAGE_TYPE >(package_type_);
}
inline void header::set_package_type(::sdo::protobuf::header_PACKAGE_TYPE value) {
  
  package_type_ = value;
  // @@protoc_insertion_point(field_set:sdo.protobuf.header.package_type)
}

// int32 sequence = 3;
inline void header::clear_sequence() {
  sequence_ = 0;
}
inline ::google::protobuf::int32 header::sequence() const {
  // @@protoc_insertion_point(field_get:sdo.protobuf.header.sequence)
  return sequence_;
}
inline void header::set_sequence(::google::protobuf::int32 value) {
  
  sequence_ = value;
  // @@protoc_insertion_point(field_set:sdo.protobuf.header.sequence)
}

// string body = 4;
inline void header::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& header::body() const {
  // @@protoc_insertion_point(field_get:sdo.protobuf.header.body)
  return body_.GetNoArena();
}
inline void header::set_body(const ::std::string& value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sdo.protobuf.header.body)
}
#if LANG_CXX11
inline void header::set_body(::std::string&& value) {
  
  body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sdo.protobuf.header.body)
}
#endif
inline void header::set_body(const char* value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sdo.protobuf.header.body)
}
inline void header::set_body(const char* value, size_t size) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sdo.protobuf.header.body)
}
inline ::std::string* header::mutable_body() {
  
  // @@protoc_insertion_point(field_mutable:sdo.protobuf.header.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* header::release_body() {
  // @@protoc_insertion_point(field_release:sdo.protobuf.header.body)
  
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void header::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    
  } else {
    
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:sdo.protobuf.header.body)
}

// int32 code = 5;
inline void header::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 header::code() const {
  // @@protoc_insertion_point(field_get:sdo.protobuf.header.code)
  return code_;
}
inline void header::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:sdo.protobuf.header.code)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace protobuf
}  // namespace sdo

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::sdo::protobuf::header_PACKAGE_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sdo::protobuf::header_PACKAGE_TYPE>() {
  return ::sdo::protobuf::header_PACKAGE_TYPE_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_header_2eproto__INCLUDED
